{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4a5ad60f1336b1754c86a11ff302661f3de8f474f24fdc31fd7204d456cc23004a077ee432b6cd67124b477a1f0dbfc7d1bf1b5c71f8381db0128c875a1b4df9",
            "file": "projects/design-system/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ipt-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button *ngIf=\"isEnabled\"    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n  >\n    {{ label }}\n  </button>\n\n  <button *ngIf=\"!isEnabled\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n  >\n    {{ label }}\n  </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ipt-button',\n  template: `<button *ngIf=\"isEnabled\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n  >\n    {{ label }}\n  </button>\n\n  <button *ngIf=\"!isEnabled\"\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n\n  @Input() primary: boolean = false;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() label: string = 'Button';\n  @Input() isEnabled: boolean = true;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary && this.isEnabled === true\n      ? 'ipt-button--primary'\n      : this.isEnabled === false ? 'ipt-button--primary-disabled'\n      : 'ipt-button--secondary';\n\n    return ['ipt-button', `ipt-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ipt-button {\n  font-family: \"Poppins\", sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 15px;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n  transition: 700ms;\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n      rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n      rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n\n.ipt-button:hover {\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 30px 90px;\n}\n\n.ipt-button:active {\n  transform: scale(0.8);\n}\n\n.ipt-button--primary {\n  color: white;\n  background-color: #1c77f7;\n}\n\n.ipt-button--primary-disabled {\n  color: gray;\n  background-color: #ffffff;\n  border: 1px solid gray;\n  box-shadow: none;\n  cursor: not-allowed;\n}\n\n.ipt-button--primary-disabled:hover {\n  box-shadow: none;\n}\n\n.ipt-button--secondary {\n  color: #1c77f7;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\n      rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,\n      rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n\n.ipt-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n\n.ipt-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n\n.ipt-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 31
                    }
                }
            }
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-a23cf27cc09f8ab4260d09a38e2cd1fb87e4cdd578ec94b5e50e87e796448b82a73621915c032f7500d9cc084442a22c0fa2a68b5156f1d241ed8cacb924fa45",
            "file": "projects/design-system/src/lib/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ipt-input",
            "styleUrls": [
                "./input.css"
            ],
            "styles": [],
            "template": "<div class=\"input-container\">\n  <input *ngIf=\"inputType === 'date'\"\n    type=\"{{ inputType ? 'text' : 'date' }}\"\n    placeholder=\"{{ placeHolder }}\"\n    [formControl]=\"formControl\"\n    [ngClass]=\"classes\"\n    onfocus=\"this.type='date';\"\n    onblur=\"javascript: if( !this.value ) this.type='text';\"\n    uib-datepicker-popup=\"dd/MM/yyyy\"\n    ng-model=\"inputType\"/>\n\n  <input *ngIf=\"inputType !== 'date'\"\n    [ngStyle]=\"{\n      'box-shadow':\n      formControl.value === ''\n      ? 'box-shadow: rgba(100, 100, 111, 0.2);'\n      : formControl.valid\n      ? '1px 1px 7.5px #1b5e20'\n      : '1px 1px 7.5px #b71c1c'\n    }\"\n    class=\"input\"\n    type=\"{{ inputType }}\"\n    placeholder=\"{{ placeHolder }}\"\n    [formControl]=\"formControl\"\n    [attr.list]=\"list\"/>\n\n  <p *ngIf=\"!formControl.valid && formControl.value !== ''\">\n    {{ validateText }}\n  </p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "AbstractControl",
                    "decorators": []
                },
                {
                    "name": "iconUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeHolder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "validateText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "codeValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "exampleForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'ipt-input',\n  template: `\n    <div class=\"input-container\">\n      <input *ngIf=\"inputType === 'date'\"\n        type=\"{{ inputType ? 'text' : 'date' }}\"\n        placeholder=\"{{ placeHolder }}\"\n        [formControl]=\"formControl\"\n        [ngClass]=\"classes\"\n        onfocus=\"this.type='date';\"\n        onblur=\"javascript: if( !this.value ) this.type='text';\"\n        uib-datepicker-popup=\"dd/MM/yyyy\"\n        ng-model=\"inputType\"/>\n\n      <input *ngIf=\"inputType !== 'date'\"\n        [ngStyle]=\"{\n          'box-shadow':\n          formControl.value === ''\n          ? 'box-shadow: rgba(100, 100, 111, 0.2);'\n          : formControl.valid\n          ? '1px 1px 7.5px #1b5e20'\n          : '1px 1px 7.5px #b71c1c'\n        }\"\n        class=\"input\"\n        type=\"{{ inputType }}\"\n        placeholder=\"{{ placeHolder }}\"\n        [formControl]=\"formControl\"\n        [attr.list]=\"list\"/>\n\n      <p *ngIf=\"!formControl.valid && formControl.value !== ''\">\n        {{ validateText }}\n      </p>\n    </div>\n    `,\n  styleUrls: ['./input.css'],\n})\nexport default class InputComponent {\n\n  public codeValue!: string;\n  data: any[] = [];\n  formControl!: FormControl;\n  exampleForm!: FormGroup;\n\n  @Input() inputType!: string;\n  @Input() placeHolder!: string;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() validateText?: string;\n  @Input() list?: string; //Para el datalist\n  @Input() iconUrl?: string;\n  @Input() set control(value: AbstractControl) {\n    if (this.formControl !== value) {\n      this.formControl = value as FormControl;\n    }\n  }\n\n  constructor(fb: FormBuilder) {\n    this.exampleForm = fb.group({\n      value: ['']\n    });\n  }\n\n  public get classes(): string {\n    return this.size === 'small'\n    ? 'ipt-input--small'\n    : 'ipt-input--large'\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\n  font-family: \"Poppins\", sans-serif;\n}\n\n@media screen and (min-width: 320px) {\n  p {\n    color: rgb(199, 58, 58);\n    font-size: 12px;\n    padding-left: 15px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  p {\n    color: rgb(199, 58, 58);\n    font-size: 14px;\n    padding-left: 15px;\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  p {\n    color: rgb(199, 58, 58);\n    font-size: 16px;\n    padding-left: 15px;\n  }\n}\n\ninput {\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  transition: 500ms;\n  font-weight: 300;\n  margin: 10px 10px -30px 10px;\n  width: -webkit-fill-available;\n  width: -moz-available;\n  height: 10px;\n}\n\ninput:hover {\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 1px 1px,\n    rgba(9, 30, 66, 0.13) 0px 0px 1px 1px;\n}\n\n.ipt-input--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n\n.ipt-input--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n\n.ipt-input--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./input.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "control": {
                    "name": "control",
                    "setSignature": {
                        "name": "control",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "AbstractControl",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 53,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "AbstractControl",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 65
                    }
                }
            }
        }
    ],
    "modules": [
        {
            "name": "DesignSystemModule",
            "id": "module-DesignSystemModule-d36e07f070da24d29d8c20c1d74228bbee1172ba04ef6186ba09c4ea6e05087c40fe173628292726adef4c16ea0b5201936943b44cd7edc57a7ebcaaddfc63ec",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/design-system/src/lib/design-system.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\"\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from \"@angular/forms\"\nimport ButtonComponent from \"./components/button/button.component\"\nimport InputComponent from \"./components/input/input.component\"\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    InputComponent\n  ],\n  imports: [\n    FormsModule,\n    FormBuilder,\n    ReactiveFormsModule,\n    ButtonComponent,\n    InputComponent\n  ],\n  exports: [\n    FormsModule,\n    FormBuilder,\n    ReactiveFormsModule,\n    ButtonComponent,\n    InputComponent\n  ],\n})\n\nexport class DesignSystemModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "FormBuilder"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "FormBuilder"
                        },
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Input>",
                "defaultValue": "(args: Input) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/design-system/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "stories/Input.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Input>",
                    "defaultValue": "(args: Input) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/design-system/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/src/lib/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}